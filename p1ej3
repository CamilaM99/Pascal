{3.- Netflix ha publicado la lista de películas que estarán disponibles durante el mes de diciembre de 2022. 
De cada película se conoce: código de película, código de género (1: acción, 2: aventura, 3: drama, 4: suspenso, 
5: comedia, 6: bélica, 7: documental y 8: terror) y puntaje promedio otorgado por las críticas. 
Implementar un programa modularizado que:

a. Lea los datos de películas y los almacene por orden de llegada y agrupados por código de género,
en una estructura de datos adecuada. La lectura finaliza cuando se lee el código de la película -1. 

b. Una vez almacenada la información, genere un vector que guarde, para cada género, 
el código de película con mayor puntaje obtenido entre todas las críticas.

c. Ordene los elementos del vector generado en b) por puntaje utilizando alguno de los dos métodos vistos en la teoría. 

d. Luego de ordenar el vector, muestre el código de película con mayor puntaje y el código de película con menor puntaje.}

program ej3p1;

const dimf= 8;

type 

rangoGenero = 1..8;

pelicula = record
	cod:integer;
	genero:rangoGenero;
	puntaje:real;
end;

lista= ^nodo;
nodo = record
	dato:pelicula;
	sig:lista;
end;

vector = array [1..dimf]  of lista;

vecCodigos = array [1..dimf] of pelicula;

//a. Lea los datos de películas y los almacene por orden de llegada y agrupados por código de género,
//en una estructura de datos adecuada. La lectura finaliza cuando se lee el código de la película -1. 

procedure generarVector (var v:vector);
	
	procedure inicializarVector (var v:vector);
	var i:integer;
	begin
		for i:=1 to dimf do 
			v[i]:=nil;
	end;
	
	procedure leerPelicula(var p:pelicula);
	begin 
		write('cod ');
		readln(p.cod);
		if (p.cod <> -1) then begin 
			randomize;
			p.genero:= random (8)+1;
			writeln('genero ',p.genero);
			p.puntaje:= random (100);
			writeln('puntaje ',p.puntaje:3:2);
			writeln;
		end;
	end;
	
	procedure insertarAtras(var l,ult:lista; p:pelicula);
	var nue:lista;
	begin
		new(nue);
		nue^.dato:=p; 
		nue^.sig:=nil;
		if (l = nil) then 
			l:=nue
		else
			ult^.sig:=nue;
		ult:=nue;
	end;
	

var ult:vector; p:pelicula;
begin
	inicializarVector(v);
	leerPelicula(p);
	while (p.cod <> -1) do begin 
		insertarAtras(v[p.genero],ult[p.genero],p);
		leerPelicula(p);
	end;
end;

//prueba
procedure imprimir (v:vector);
var i:integer;
begin 
	for i:=1 to dimf do begin 
		writeln('pos ',i);
		if (v[i] <> nil ) then begin 
			writeln('genero ',v[i]^.dato.genero,', codigo ',v[i]^.dato.cod,', puntaje ',v[i]^.dato.puntaje:3:0 );
			v[i]:=v[i]^.sig;
		end;
	end;
	writeln;
end;

//b. Una vez almacenada la información, genere un vector que guarde, para cada género, 
//el código de película con mayor puntaje obtenido entre todas las críticas.
procedure generarVecCodigos (var vc:vecCodigos; v:vector; var diml:integer);
var i,codMax:integer; maxPuntaje:real;
begin 
	codMax:=0;
	for i:=1 to dimf do begin 
		maxPuntaje:=-1;
		vc[i].genero:=i; //actualizo el genero en el vector2
		while (v[i] <> nil) do begin 
			if (v[i]^.dato.puntaje > maxPuntaje) then begin
				maxPuntaje:=v[i]^.dato.puntaje;
				vc[i].puntaje:=maxPuntaje; //actualizo el puntaje del vector 2
				codMax:=v[i]^.dato.cod;
				vc[i].cod:=codMax;//actualizo el codigo en el vector 2 
				diml:=diml+1;
			end;
			v[i]:=v[i]^.sig;
		end;
	end;
end;

//prueba
procedure imprimirVector2(vc:vecCodigos; diml:integer);
var i:integer;
begin
	for i:=1 to diml do begin 
		writeln('genero ',i,', cod ',vc[i].cod,', puntaje ',vc[i].puntaje:3:3);
	end;
end;

//c. Ordene los elementos del vector generado en b) por puntaje utilizando alguno de los dos métodos vistos en la teoría. 
procedure  ordenar (var vc:vecCodigos; diml:integer);
var i,j:integer; act:pelicula;
begin 
	for i:=2 to diml do begin 
		j:=i-1;
		act:=vc[i];
		while (j > 0) and (act.puntaje < vc[j].puntaje) do begin
			vc[j+1]:=vc[j];
			j:=j-1;
		end; 
		vc[j+1]:=act;
	end;
end;

//d. Luego de ordenar el vector, muestre el código de película con mayor puntaje y el código de película con menor puntaje.
procedure imprimirMaxMin(v:vecCodigos; diml:integer);
var i:integer;
begin 
	writeln;
	i:=1;
	while (v[i].puntaje = 0) do 
		i:=i+1;
	writeln('el codigo de pelicula con menor puntaje es ',v[i].cod,', puntaje: ',v[i].puntaje:2:2);
	writeln('el codigo de pelicula con mayor puntaje es ',v[diml].cod,', puntaje: ',v[diml].puntaje:2:2);
end;
var v:vector; vc:vecCodigos; diml:integer;
begin 
	diml:=1;
	generarVector(v);
	writeln;
	writeln(' --- vector de listas ---');
	imprimir(v);
	generarVecCodigos(vc,v,diml);
	writeln;
	writeln(' --- vector 2 ---');
	imprimirVector2(vc,diml);
	ordenar (vc,diml);
	writeln;
	writeln(' --- vector 2 ordenado por puntaje ---');
	imprimirVector2(vc,diml);
	imprimirMaxMin(vc,diml);
end.


